{"version":3,"file":"static/js/759.a06d0194.chunk.js","mappings":"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","sources":["components/NavLink/NavLink.tsx","data/initialBlock.ts","components/BlockContainer/BlockContainer.tsx","pages/TradingDeskPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface ICustomNavLink {\r\n  to: string;\r\n  className?: string;\r\n  activeClassName?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst CustomNavLink: React.FC<ICustomNavLink> = ({\r\n  to,\r\n  className,\r\n  activeClassName,\r\n  children,\r\n}) => {\r\n  return (\r\n    <NavLink\r\n      to={to}\r\n      className={({ isActive }) =>\r\n        `${className ? className : \"p-4 m-2 bg-slate-400 rounded\"} ${\r\n          isActive ? activeClassName : \"text-white hover:text-black\"\r\n        }`\r\n      }\r\n    >\r\n      {children}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default CustomNavLink;\r\n","// components/data/initialBlocks.ts\r\n\r\nexport interface IBlock {\r\n  id: number;\r\n  content: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  zIndex: number;\r\n}\r\n\r\nexport const initialBlocks: IBlock[] = [\r\n  {\r\n    id: 1,\r\n    content: \"Block 1\",\r\n    x: 50,\r\n    y: 50,\r\n    width: 300,\r\n    height: 100,\r\n    zIndex: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    content: \"Block 2\",\r\n    x: 400,\r\n    y: 50,\r\n    width: 300,\r\n    height: 100,\r\n    zIndex: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    content: \"Block 3\",\r\n    x: 750,\r\n    y: 50,\r\n    width: 300,\r\n    height: 100,\r\n    zIndex: 3,\r\n  },\r\n  {\r\n    id: 4,\r\n    content: \"Block 4\",\r\n    x: 50,\r\n    y: 300,\r\n    width: 300,\r\n    height: 100,\r\n    zIndex: 4,\r\n  },\r\n  {\r\n    id: 5,\r\n    content: \"Block 5\",\r\n    x: 400,\r\n    y: 300,\r\n    width: 300,\r\n    height: 100,\r\n    zIndex: 5,\r\n  },\r\n];\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { IBlock, initialBlocks } from \"../../data/initialBlock\";\r\n\r\nconst BlockContainer: React.FC = () => {\r\n  const [blocks, setBlocks] = useState<IBlock[]>([]);\r\n  const [deletedBlocks, setDeletedBlocks] = useState<IBlock[]>([]);\r\n  const [highestZIndex, setHighestZIndex] = useState<number>(5);\r\n  const [activeBlockId, setActiveBlockId] = useState<number | null>(null);\r\n  const [prevZIndex, setPrevZIndex] = useState<Map<number, number>>(new Map());\r\n\r\n  useEffect(() => {\r\n    const savedBlocks = localStorage.getItem(\"blocks\");\r\n    const savedDeletedBlocks = localStorage.getItem(\"deletedBlocks\");\r\n\r\n    if (savedBlocks) {\r\n      const parsedBlocks = JSON.parse(savedBlocks);\r\n      if (parsedBlocks.length > 0) {\r\n        setBlocks(parsedBlocks);\r\n      } else {\r\n        initializeDefaultBlocks();\r\n      }\r\n    } else {\r\n      initializeDefaultBlocks();\r\n    }\r\n\r\n    if (savedDeletedBlocks) {\r\n      setDeletedBlocks(JSON.parse(savedDeletedBlocks));\r\n    }\r\n\r\n    const maxZIndex = savedBlocks\r\n      ? Math.max(\r\n          ...JSON.parse(savedBlocks).map((block: IBlock) => block.zIndex)\r\n        )\r\n      : 5;\r\n    setHighestZIndex(maxZIndex);\r\n  }, []);\r\n\r\n  const initializeDefaultBlocks = () => {\r\n    setBlocks(initialBlocks);\r\n    localStorage.setItem(\"blocks\", JSON.stringify(initialBlocks));\r\n  };\r\n\r\n  const saveBlocksToLocalStorage = useCallback(\r\n    debounce((updatedBlocks: IBlock[]) => {\r\n      localStorage.setItem(\"blocks\", JSON.stringify(updatedBlocks));\r\n      console.log(\"Blocks saved to localStorage:\", updatedBlocks);\r\n    }, 1000),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (blocks.length > 0) {\r\n      saveBlocksToLocalStorage(blocks);\r\n    }\r\n\r\n    if (deletedBlocks.length > 0) {\r\n      localStorage.setItem(\"deletedBlocks\", JSON.stringify(deletedBlocks));\r\n      console.log(\"Deleted blocks updated in localStorage:\", deletedBlocks);\r\n    }\r\n  }, [blocks, deletedBlocks, saveBlocksToLocalStorage]);\r\n\r\n  const toFront = (id: number) => {\r\n    setActiveBlockId(id);\r\n    setPrevZIndex((prev) => {\r\n      const currentBlock = blocks.find((block) => block.id === id);\r\n      const newZIndex = highestZIndex + 1;\r\n\r\n      if (currentBlock) {\r\n        setBlocks(\r\n          blocks.map((block) =>\r\n            block.id === id ? { ...block, zIndex: newZIndex } : block\r\n          )\r\n        );\r\n        setHighestZIndex(newZIndex);\r\n\r\n        return new Map(prev).set(id, currentBlock.zIndex);\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const resetZIndex = (id: number) => {\r\n    setBlocks(\r\n      blocks.map((block) =>\r\n        block.id === id ? { ...block, zIndex: prevZIndex.get(id) || 1 } : block\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateBlockPosition = (\r\n    id: number,\r\n    newPosition: { x: number; y: number }\r\n  ) => {\r\n    setBlocks(\r\n      blocks.map((block) =>\r\n        block.id === id\r\n          ? {\r\n              ...block,\r\n              x: Math.max(\r\n                0,\r\n                Math.min(newPosition.x, window.innerWidth - block.width)\r\n              ),\r\n              y: Math.max(\r\n                0,\r\n                Math.min(newPosition.y, window.innerHeight - block.height)\r\n              ),\r\n            }\r\n          : block\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateBlockSize = (\r\n    id: number,\r\n    newSize: { width: number; height: number }\r\n  ) => {\r\n    setBlocks(\r\n      blocks.map((block) =>\r\n        block.id === id\r\n          ? { ...block, width: newSize.width, height: newSize.height }\r\n          : block\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteBlock = (id: number) => {\r\n    const blockToDelete = blocks.find((block) => block.id === id);\r\n    if (blockToDelete) {\r\n      setDeletedBlocks([...deletedBlocks, blockToDelete]);\r\n      setBlocks(blocks.filter((block) => block.id !== id));\r\n    }\r\n  };\r\n\r\n  const restoreBlock = () => {\r\n    if (deletedBlocks.length > 0) {\r\n      const lastDeleted = deletedBlocks.pop();\r\n      if (lastDeleted) {\r\n        setBlocks([\r\n          ...blocks,\r\n          {\r\n            ...lastDeleted,\r\n            width: 300,\r\n            height: 100,\r\n            x: window.innerWidth / 2 - 150,\r\n            y: window.innerHeight / 2 - 50,\r\n            zIndex: highestZIndex + 1,\r\n          },\r\n        ]);\r\n        setHighestZIndex(highestZIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {deletedBlocks.length > 0 && (\r\n        <button\r\n          onClick={restoreBlock}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n        >\r\n          Відновити видалений блок\r\n        </button>\r\n      )}\r\n      <div className=\"relative w-full h-full border border-black\">\r\n        {blocks.map((block) => (\r\n          <Rnd\r\n            key={block.id}\r\n            size={{ width: block.width, height: block.height }}\r\n            position={{ x: block.x, y: block.y }}\r\n            onMouseDown={() => toFront(block.id)}\r\n            enableResizing\r\n            onDragStop={(e, d) =>\r\n              updateBlockPosition(block.id, { x: d.x, y: d.y })\r\n            }\r\n            onResizeStop={(e, direction, ref, delta, position) => {\r\n              updateBlockPosition(block.id, position);\r\n              updateBlockSize(block.id, {\r\n                width: parseInt(ref.style.width, 10),\r\n                height: parseInt(ref.style.height, 10),\r\n              });\r\n            }}\r\n            onMouseUp={() => {\r\n              if (activeBlockId === block.id) {\r\n                resetZIndex(block.id);\r\n                setActiveBlockId(null);\r\n              }\r\n            }}\r\n            className=\"relative bg-slate-600\"\r\n            style={{ zIndex: block.zIndex }}\r\n          >\r\n            <div className=\"w-full h-full bg-light-gray border border-black relative\">\r\n              {block.content}\r\n              <button\r\n                onClick={() => deleteBlock(block.id)}\r\n                className=\"absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </Rnd>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockContainer;\r\n","import React from \"react\";\r\nimport BlockContainer from \"../components/BlockContainer/BlockContainer\";\r\nimport CustomNavLink from \"../components/NavLink/NavLink\";\r\n\r\nfunction TradingDeskPage() {\r\n  return (\r\n    <div className=\"flex gap-2 flex-col\">\r\n      <CustomNavLink to=\"/\">Перейти назад</CustomNavLink>\r\n      <BlockContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TradingDeskPage;\r\n"],"names":["_ref","to","className","activeClassName","children","_jsx","NavLink","_ref2","isActive","initialBlocks","id","content","x","y","width","height","zIndex","BlockContainer","blocks","setBlocks","useState","deletedBlocks","setDeletedBlocks","highestZIndex","setHighestZIndex","activeBlockId","setActiveBlockId","prevZIndex","setPrevZIndex","Map","useEffect","savedBlocks","localStorage","getItem","savedDeletedBlocks","parsedBlocks","JSON","parse","length","initializeDefaultBlocks","maxZIndex","Math","max","map","block","setItem","stringify","saveBlocksToLocalStorage","useCallback","debounce","updatedBlocks","console","log","updateBlockPosition","newPosition","min","window","innerWidth","innerHeight","_jsxs","onClick","restoreBlock","lastDeleted","pop","Rnd","size","position","onMouseDown","toFront","prev","currentBlock","find","newZIndex","set","enableResizing","onDragStop","e","d","onResizeStop","direction","ref","delta","updateBlockSize","newSize","parseInt","style","onMouseUp","get","blockToDelete","filter","deleteBlock","CustomNavLink"],"sourceRoot":""}